Year = as.numeric(time(sunspot.year)),
SunSpots = as.numeric(sunspot.year)
)
ggplot(data_sunspot, mapping = aes(x = Year, y = SunSpots)) +
geom_area()
ggplot(data_sunspot, mapping = aes(x = Year, y = SunSpots)) +
geom_area(color = 'black', fill = 'blue', alpha = 0.3)
?as.numeric()
ggplot(data_sunspot, mapping = aes(x = Year, y = SunSpots)) +
geom_area(color = 'black', fill = 'blue', alpha = 0.3)  #alpha will provide transparency
ggplot(data = data_sunspot, mapping = aes(x = Year, y = SunSpots)) +
geom_area(fill = 'blue', alpha = 0.3) +
geom_line()
ggplot(data = data_sunspot, mapping = aes(x = Year, y = SunSpots)) +
geom_area(fill = 'blue', alpha = 0.3) +
geom_line()
ggplot(data = data_sunspot, mapping = aes(x = Year, y = SunSpots)) +
geom_area(color = 'black', fill = 'blue', alpha = 0.3)  #alpha will provide transparency
ggplot(data = data_sunspot, mapping = aes(x = Year, y = SunSpots)) +
geom_area(fill = 'blue', alpha = 0.3) +
geom_line()
install.packages("gcookbook")
library("gcookbook", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
library(gcookbook)
uspopage
str(uspopage)
uspopage.Year
uspopage$Year
uspop_data = data.frame(
Year = as.numeric(uspopage$Year),
AgeGroup = as.numeric(uspopage$AgeGroup),
Thousands = as.numeric(uspopage$Thousands)
)
View(uspop_data)
uspop_data = data.frame(
Year = uspopage$Year,
AgeGroup = uspopage$AgeGroup,
Thousands = uspopage$Thousands
)
ggplot(data = uspop_data, mapping = aes(x = Year, y = Thousands, fill = AgeGroup)) +
geom_area()
library(ggplot2)
data(BOD)
ggplot(data = BOD, mapping = aes(x = Time, y = demand)) +
geom_line()
#here we have converted time into a categorical variable and group = 1 means treat
#each point as a group and connect all these group points by a line
ggplot(data = BOD, aes(x = factor(Time), y = demand, group = 1)) +
geom_line()
speed = c()
for(i in 1:85){
rand_num = sample(15:100, 1)   #taking a random number from 15 to 100
speed = c(speed, rand_num)   #append rand_num to speed
}
vehicle_type = c()
for(i in 1:85){
if(i<30){
vehicle_type = c(vehicle_type, 'Car')
}
else if(i>29 & i<58){
vehicle_type = c(vehicle_type, 'Auto')
}
else{
vehicle_type = c(vehicle_type, 'two-wheeler')
}
}
road_width = c()
for(i in 1:85){
rand_num = sample(c(3.75, 7.00, 10.50), 1)
road_width = c(road_width, rand_num)
}
dataset1 = data.frame(speed = speed,
vehicle_type = vehicle_type,
road_width = road_width)
library(dplyr)
testset1 = dataset1 %>%
group_by(vehicle_type, road_width) %>%
summarise(speed = mean(speed))
ggplot(data = testset1, mapping = aes(x = road_width, y = speed, color = vehicle_type)) +
geom_line()
ggplot(data = uspop_data, mapping = aes(x = Year, y = Thousands, fill = AgeGroup)) +
geom_area()
ggplot(data = uspop_data, mapping = aes(x = Year, y = Thousands, fill = AgeGroup)) +
geom_area(color = 'black', size = 0.2, alpha = 0.4) +
scale_fill_brewer(palette = 'Blues', breaks = rev(uspop_data$AgeGroup))
ggplot(data = uspop_data, mapping = aes(x = Year, y = Thousands, fill = AgeGroup)) +
geom_area(color = 'black', size = 0.2, alpha = 0.4, position = position_stack(reverse = TRUE)) +
scale_fill_brewer(palette = 'Blues')
#To make stack position reversed
ggplot(data = uspop_data, mapping = aes(x = Year, y = Thousands, fill = AgeGroup)) +
geom_area(color = 'black', size = 0.2, alpha = 0.4, position = position_stack(reverse = TRUE)) +
scale_fill_brewer(palette = 'Blues', breaks = rev(uspop_data$AgeGroup)))
#To make stack position reversed
ggplot(data = uspop_data, mapping = aes(x = Year, y = Thousands, fill = AgeGroup)) +
geom_area(color = 'black', size = 0.2, alpha = 0.4, position = position_stack(reverse = TRUE)) +
scale_fill_brewer(palette = 'Blues', breaks = rev(uspop_data$AgeGroup))
#Adding a thin black line between areas of size = 0.2
#making area transparent by 60%
#Adding color palette "Blues"
#Finally reversing the stacked colors
ggplot(data = uspop_data, mapping = aes(x = Year, y = Thousands, fill = AgeGroup)) +
geom_area(color = 'black', size = 0.2, alpha = 0.4) +
scale_fill_brewer(palette = 'Blues', breaks = rev(uspop_data$AgeGroup))
ggplot(data = uspop_data, mapping = aes(x = Year, y = Thousands, fill = AgeGroup)) +
geom_area()
#Adding a thin black line between areas of size = 0.2
#making area transparent by 60%
#Adding color palette "Blues"
#Finally reversing the stacked colors
ggplot(data = uspop_data, mapping = aes(x = Year, y = Thousands, fill = AgeGroup)) +
geom_area(color = 'black', size = 0.2, alpha = 0.4) +
scale_fill_brewer(palette = 'Blues', breaks = rev(uspop_data$AgeGroup))
#To make stack position reversed
ggplot(data = uspop_data, mapping = aes(x = Year, y = Thousands, fill = AgeGroup)) +
geom_area(color = 'black', size = 0.2, alpha = 0.4, position = position_stack(reverse = TRUE)) +
scale_fill_brewer(palette = 'Blues', breaks = rev(uspop_data$AgeGroup))
ggplot(data = uspop_data, mapping = aes(x = Year, y = Thousands, fill = AgeGroup)) +
geom_area(color = 'black', size = 0.2, alpha = 0.4, position = position_stack(reverse = TRUE)) +
scale_fill_brewer(palette = 'Blues', breaks = rev(uspop_data$AgeGroup))
ggplot(data = uspop_data, mapping = aes(x = Year, y = Thousands, fill = AgeGroup)) +
geom_area()
#To make stack position reversed
ggplot(data = uspop_data, mapping = aes(x = Year, y = Thousands, fill = AgeGroup)) +
geom_area(color = 'black', size = 0.2, alpha = 0.4, position = position_stack(reverse = TRUE)) +
scale_fill_brewer(palette = 'Blues', breaks = rev(uspop_data$AgeGroup))
ggplot(data = uspop_data, mapping = aes(x = Year, y = Thousands, fill = AgeGroup)) +
geom_area()
#To make stack position reversed
ggplot(data = uspop_data, mapping = aes(x = Year, y = Thousands, fill = AgeGroup)) +
geom_area(color = 'black', size = 0.2, alpha = 0.4, position = position_stack(reverse = TRUE)) +
scale_fill_brewer(palette = 'Blues', breaks = rev(uspop_data$AgeGroup))
ggplot(data = uspop_data, mapping = aes(x = Year, y = Thousands, fill = AgeGroup)) +
geom_area()
#Adding a thin black line between areas of size = 0.2
#making area transparent by 60%
#Adding color palette "Blues"
#Finally reversing the stacked colors
ggplot(data = uspop_data, mapping = aes(x = Year, y = Thousands, fill = AgeGroup)) +
geom_area(color = 'black', size = 0.2, alpha = 0.4) +
scale_fill_brewer(breaks = rev(uspop_data$AgeGroup))
#Adding a thin black line between areas of size = 0.2
#making area transparent by 60%
#Adding color palette "Blues"
#Finally reversing the stacked colors
ggplot(data = uspop_data, mapping = aes(x = Year, y = Thousands, fill = AgeGroup)) +
geom_area(color = 'black', size = 0.2, alpha = 0.4) +
scale_fill_brewer(palette = 'Blues', breaks = rev(uspop_data$AgeGroup))
#Adding a thin black line between areas of size = 0.2
#making area transparent by 60%
#Adding color palette "Blues"
#Finally reversing the stacked colors
ggplot(data = uspop_data, mapping = aes(x = Year, y = Thousands, fill = AgeGroup)) +
geom_area(color = 'black', size = 0.2, alpha = 0.4, position = position_stack(reverse = TRUE))
#Adding a thin black line between areas of size = 0.2
#making area transparent by 60%
#Adding color palette "Blues"
#Finally reversing the stacked colors
ggplot(data = uspop_data, mapping = aes(x = Year, y = Thousands, fill = AgeGroup)) +
geom_area(position = position_stack(reverse = TRUE))
ggplot(data = uspop_data, mapping = aes(x = Year, y = Thousands, fill = AgeGroup)) +
geom_area()
uspopage  #this is inbuilt dataset
#Adding a thin black line between areas of size = 0.2
#making area transparent by 60%
#Adding color palette "Blues"
#Finally reversing the stacked colors
ggplot(data = uspop_data, mapping = aes(x = Year, y = Thousands, fill = AgeGroup)) +
geom_area(position = position_stack(reverse = TRUE))
#To make stack position reversed
ggplot(data = uspop_data, mapping = aes(x = Year, y = Thousands, fill = AgeGroup)) +
geom_area(color = 'black', size = 0.2, alpha = 0.4, position = position_stack(reverse = TRUE)) +
scale_fill_brewer(palette = 'Blues', breaks = rev(uspop_data$AgeGroup))
ggplot(data = uspop_data, mapping = aes(x = Year, y = Thousands, fill = AgeGroup)) +
geom_area()
ggplot(data = uspop_data, mapping = aes(x = Year, y = Thousands, fill = AgeGroup)) +
geom_area()
ggplot(data = uspop_data, mapping = aes(x = Year, y = Thousands)) +
geom_area()
ggplot(data = uspop_data, mapping = aes(x = Year, y = Thousands, fill = AgeGroup)) +
geom_area()
ggplot(data = data_sunspot, mapping = aes(x = Year, y = SunSpots)) +
geom_area()
ggplot(data = uspop_data, mapping = aes(x = Year, y = Thousands, fill = AgeGroup)) +
geom_area()
?geom_area()
#here, geom_area() does two following things:
#1. It
ggplot(data = uspop_data, mapping = aes(x = Year, y = Thousands, fill = AgeGroup)) +
geom_area()
#Adding a thin black line between areas of size = 0.2
#making area transparent by 60%
#Adding color palette "Blues"
#Finally reversing the stacked colors
ggplot(data = uspop_data, mapping = aes(x = Year, y = Thousands, fill = AgeGroup)) +
geom_area(color = 'black', size = 0.2)
#Adding a thin black line between areas of size = 0.2
#making area transparent by 60%
#Adding color palette "Blues"
#Finally reversing the stacked colors
ggplot(data = uspop_data, mapping = aes(x = Year, y = Thousands, fill = AgeGroup)) +
geom_area(color = 'black', size = 0.2, alpha = 0.4)
#Adding a thin black line between areas of size = 0.2
#making area transparent by 60%
#Adding color palette "Blues"
#Finally reversing the stacked colors
ggplot(data = uspop_data, mapping = aes(x = Year, y = Thousands, fill = AgeGroup)) +
geom_area(color = 'black', size = 0.2, alpha = 0.4) +
scale_fill_brewer(palette = 'Blues')
#Adding a thin black line between areas of size = 0.2
#making area transparent by 60%
#Adding color palette "Blues"
ggplot(data = uspop_data, mapping = aes(x = Year, y = Thousands, fill = AgeGroup)) +
geom_area(color = 'black', size = 0.2, alpha = 0.4) +
scale_fill_brewer(palette = 'Blues')
library(ggplot2)
mtcars
str(mtcars)
data_cars = mtcars
View(data_cars)
ggplot(data = data_cars, mapping = aes(x = wt, y = mpg)) +
geom_point()
#change points shapes
ggplot(data = data_cars, mapping = aes(x = wt, y = mpg)) +
geom_point(shape = 18)
#change points shapes
ggplot(data = data_cars, mapping = aes(x = wt, y = mpg)) +
geom_point(17)
#change points shapes
ggplot(data = data_cars, mapping = aes(x = wt, y = mpg)) +
geom_point(17)
#change points shapes
ggplot(data = data_cars, mapping = aes(x = wt, y = mpg)) +
geom_point(shape = 17)
#change points shapes
ggplot(data = data_cars, mapping = aes(x = wt, y = mpg)) +
geom_point(shape = 17, size = 1.5)
#change points shapes
ggplot(data = data_cars, mapping = aes(x = wt, y = mpg)) +
geom_point(shape = 17, size = 4)
#change points shape and size
ggplot(data = data_cars, mapping = aes(x = wt, y = mpg)) +
geom_point(shape = 17, size = 3)
ggplot(data = data_cars, mapping = aes(x = wt, y = mpg, shape = as.factor(am))) +
geom_point(size = 3)
ggplot(data = data_cars, mapping = aes(x = wt, y = mpg, shape = factor(am))) +
geom_point(size = 3)
ggplot(data = data_cars, mapping = aes(x = wt, y = mpg, color = factor(am))) +
geom_point(shape = 17, size = 3)
#here points color will be different based on 'am' column
ggplot(data = data_cars, mapping = aes(x = wt, y = mpg, color = factor(am))) +
geom_point(shape = 11, size = 3)
library(ggplot2)
mtcars
str(mtcars)
data_cars = mtcars
ggplot(data = data_cars, mapping = aes(x = wt, y = mpg)) +
geom_point()
#change points shape and size
ggplot(data = data_cars, mapping = aes(x = wt, y = mpg)) +
geom_point(shape = 17, size = 3)
#here points shapes will be different based on 'am' column
ggplot(data = data_cars, mapping = aes(x = wt, y = mpg, shape = factor(am))) +
geom_point(size = 3)
#here points color will be different based on 'am' column
ggplot(data = data_cars, mapping = aes(x = wt, y = mpg, color = factor(am))) +
geom_point(shape = 11, size = 3)
View(data_cars)
#here points color will be different based on 'hp' column. Now here 'hp' is continuous
ggplot(data = data_cars, mapping = aes(x = wt, y = mpg, color = hp)) +
geom_point(shape = 11, size = 3)
#here points color will be different based on 'hp' column. Now here 'hp' is continuous
ggplot(data = data_cars, mapping = aes(x = wt, y = mpg, color = hp)) +
geom_point(shape = 18, size = 3)
#here points color will be different based on 'hp' column. Now here 'hp' is continuous
ggplot(data = data_cars, mapping = aes(x = wt, y = mpg, color = hp)) +
geom_point(size = 3)
#here points color will be different based on 'hp' column. Now here 'hp' is continuous
ggplot(data = data_cars, mapping = aes(x = wt, y = mpg, color = hp)) +
geom_point(size = 10)
#here points color will be different based on 'hp' column. Now here 'hp' is continuous
ggplot(data = data_cars, mapping = aes(x = wt, y = mpg, color = hp)) +
geom_point(size = 3)
#here points color will be different based on 'hp' column. Now here 'hp' is continuous
ggplot(data = data_cars, mapping = aes(x = wt, y = mpg, color = hp)) +
geom_point(shape = 10, size = 3)
#here points color will be different based on 'hp' column. Now here 'hp' is continuous
ggplot(data = data_cars, mapping = aes(x = wt, y = mpg, color = hp)) +
geom_point(shape = 18, size = 3)
#here points color will be different based on 'hp' column. Now here 'hp' is continuous
ggplot(data = data_cars, mapping = aes(x = wt, y = mpg, fill = hp)) +
geom_point(shape = 18)
#here points color will be different based on 'hp' column. Now here 'hp' is continuous
ggplot(data = data_cars, mapping = aes(x = wt, y = mpg, fill = hp)) +
geom_point(size = 10)
#here points color will be different based on 'hp' column. Now here 'hp' is continuous
ggplot(data = data_cars, mapping = aes(x = wt, y = mpg, size = hp)) +
geom_point(shape = 10)
ggplot(data = data_cars, mapping = aes(x = wt, y = mpg, fill = hp)) +
geom_point(shape = 22, size = 5) +
scale_fill_gradient(low = 'red', high = 'white')
ggplot(data = data_cars, mapping = aes(x = wt, y = mpg, size = hp, color = factor(gear))) +
geom_point(shape = 22, size = 5) +
scale_color_manual(values = c('red', 'blue', 'green'))
ggplot(data = data_cars, mapping = aes(x = wt, y = mpg, size = hp, color = factor(gear))) +
geom_point(shape = 22) +
scale_color_manual(values = c('red', 'blue', 'green'))
ggplot(data = data_cars, mapping = aes(x = wt, y = mpg, size = hp, color = factor(gear))) +
geom_point(shape = 20, ) +
scale_color_manual(values = c('red', 'blue', 'green'))
ggplot(data = data_cars, mapping = aes(x = wt, y = mpg, size = hp, color = factor(gear))) +
geom_point(shape = 20, alpha = 0.8) +
scale_color_manual(values = c('red', 'blue', 'green'))
new_plot = ggplot(data = data_cars, mapping = aes(x = factor(gear), y = mpg, color = factor(am)))
new_plot + geom_point(size = 3)
new_plot + geom_point(size = 3, position = 'jitter')
new_plot + geom_point(size = 3, position = position_jitter(width = 0.2, height = 0.2))
new_plot + geom_point(size = 3, position = position_jitter(width = 0.9, height = 0.2))
new_plot + geom_point(size = 3, position = position_jitter(width = 0.1, height = 0.2))
new_plot + geom_point(size = 3, position = position_jitter(width = 0.1, height = 0.8))
new_plot + geom_point(size = 3, position = position_jitter(width = 0.1, height = 3))
ggplot(data = data_cars, mapping = aes(x = factor(gear), y = mpg)) +
geom_boxplot()
ggplot(data = data_cars, mapping = aes(x = factor(gear), y = mpg)) +
geom_boxplot(aes(color = factor(am)))
ggplot(data = data_cars, mapping = aes(x = factor(gear), y = mpg)) +
geom_boxplot()
ggplot(data = data_cars, mapping = aes(x = factor(gear), y = mpg)) +
geom_boxplot(aes(color = factor(am)))
ggplot(data = data_cars, mapping = aes(x = factor(gear), y = mpg)) +
geom_boxplot(aes(color = factor(am)))
new_plot + geom_point(size = 3)
ggplot(data = data_cars, mapping = aes(x = factor(gear), y = mpg)) +
geom_boxplot(aes(color = factor(am)))
ggplot(data = data_cars, mapping = aes(x = factor(gear), y = mpg)) +
geom_boxplot() +
geom_jitter(width = 0.2)
ggplot(data = data_cars, mapping = aes(x = factor(gear), y = mpg)) +
geom_boxplot(aes(color = factor(am))) +
coord_flip()
ggplot(data = data_cars, mapping = aes(x = factor(gear), y = mpg)) +
geom_boxplot(notch = TRUE)
library(ggplot2)
mtcars
str(mtcars)
data_cars = mtcars
ggplot(data = data_cars, mapping = aes(x = wt, y = mpg)) +
geom_point()
#change points shape and size
ggplot(data = data_cars, mapping = aes(x = wt, y = mpg)) +
geom_point(shape = 17, size = 3)
#here points shapes will be different based on 'am' column
ggplot(data = data_cars, mapping = aes(x = wt, y = mpg, shape = factor(am))) +
geom_point(size = 3)
#here points color will be different based on 'am' column. Here, 'am' is categorical.
ggplot(data = data_cars, mapping = aes(x = wt, y = mpg, color = factor(am))) +
geom_point(shape = 11, size = 3)
#here points color will be different based on 'hp' column. Now here 'hp' is continuous
ggplot(data = data_cars, mapping = aes(x = wt, y = mpg, color = hp)) +
geom_point(shape = 18, size = 3)
#here points size will be different based on 'hp' column. Now here 'hp' is continuous
ggplot(data = data_cars, mapping = aes(x = wt, y = mpg, size = hp)) +
geom_point(shape = 10)
#here color of points will be darker or lighter based on the value of 'hp'
ggplot(data = data_cars, mapping = aes(x = wt, y = mpg, fill = hp)) +
geom_point(shape = 22, size = 5) +
scale_fill_gradient(low = 'red', high = 'white')
#here, below the size of the points will be based on 'hp' and color of the points will be based on number of gears
ggplot(data = data_cars, mapping = aes(x = wt, y = mpg, size = hp, color = factor(gear))) +
geom_point(shape = 20, alpha = 0.8) +
scale_color_manual(values = c('red', 'blue', 'green'))
new_plot = ggplot(data = data_cars, mapping = aes(x = factor(gear), y = mpg, color = factor(am)))
new_plot + geom_point(size = 3)
new_plot + geom_point(size = 3, position = 'jitter')
new_plot + geom_point(size = 3, position = position_jitter(width = 0.1, height = 3))
ggplot(data = data_cars, mapping = aes(x = factor(gear), y = mpg)) +
geom_boxplot()
ggplot(data = data_cars, mapping = aes(x = factor(gear), y = mpg)) +
geom_boxplot(aes(color = factor(am)))
ggplot(data = data_cars, mapping = aes(x = factor(gear), y = mpg)) +
geom_boxplot() +
geom_jitter(width = 0.2)
ggplot(data = data_cars, mapping = aes(x = factor(gear), y = mpg)) +
geom_boxplot(aes(color = factor(am))) +
coord_flip()
ggplot(data = data_cars, mapping = aes(x = factor(gear), y = mpg)) +
geom_boxplot(notch = TRUE)
##########Add different points shapes, color and fill in scatter plots############
##########Add different points shapes, color and fill in scatter plots############
#Refer video: "GGPlot_Video11.mp4" here onwards
ggplot(data = data_cars, mapping = aes(x = mpg, y = wt, shape = factor(am), color = factor(am))) +
geom_point(size = 5)
##########Add different points shapes, color and fill in scatter plots############
#Refer video: "GGPlot_Video11.mp4" here onwards
ggplot(data = data_cars, mapping = aes(x = mpg, y = wt, shape = factor(am))) +
geom_point(size = 5)
, color = factor(am)
##########Add different points shapes, color and fill in scatter plots############
#Refer video: "GGPlot_Video11.mp4" here onwards
ggplot(data = data_cars, mapping = aes(x = mpg, y = wt, shape = factor(am), color = factor(am))) +
geom_point(size = 5)
##########Add different points shapes, color and fill in scatter plots############
#Refer video: "GGPlot_Video11.mp4" here onwards
ggplot(data = data_cars, mapping = aes(x = mpg, y = wt, shape = factor(am), color = factor(am))) +
geom_point(size = 10)
##########Add different points shapes, color and fill in scatter plots############
#Refer video: "GGPlot_Video11.mp4" here onwards
ggplot(data = data_cars, mapping = aes(x = mpg, y = wt, shape = factor(am), color = factor(am))) +
geom_point(size = 50)
##########Add different points shapes, color and fill in scatter plots############
#Refer video: "GGPlot_Video11.mp4" here onwards
ggplot(data = data_cars, mapping = aes(x = mpg, y = wt, shape = factor(am), color = factor(am))) +
geom_point(size = 2)
##########Add different points shapes, color and fill in scatter plots############
#Refer video: "GGPlot_Video11.mp4" here onwards
ggplot(data = data_cars, mapping = aes(x = mpg, y = wt, shape = factor(am), color = factor(am))) +
geom_point(size = 20)
##########Add different points shapes, color and fill in scatter plots############
#Refer video: "GGPlot_Video11.mp4" here onwards
ggplot(data = data_cars, mapping = aes(x = mpg, y = wt, shape = factor(am), color = factor(am))) +
geom_point(size = 5)
ggplot(data = data_cars, mapping = aes(x = mpg, y = wt, shape = factor(am), color = factor(am))) +
geom_point(size = 5) +
scale_shape_manual(values = c(7, 8))
ggplot(data = data_cars, mapping = aes(x = mpg, y = wt, shape = factor(am), color = factor(am))) +
geom_point(size = 5) +
scale_shape_manual(values = c(8, 8))
ggplot(data = data_cars, mapping = aes(x = mpg, y = wt, shape = factor(am), color = factor(am))) +
geom_point(size = 5) +
scale_shape_manual(values = c(10, 8))
ggplot(data = data_cars, mapping = aes(x = mpg, y = wt, shape = factor(am), color = factor(am))) +
geom_point(size = 5) +
scale_shape_manual(values = c(10, 8)) +
scale_color_manual(values = c("red", "blue"))
ggplot(data = data_cars, mapping = aes(x = mpg, y = wt, shape = factor(am), color = factor(am))) +
geom_point(size = 5) +
scale_shape_manual(values = c(10, 8)) +
scale_color_manual(values = c("orange", "blue"))
ggplot(data = data_cars, mapping = aes(x = mpg, y = wt, shape = factor(am), fill = factor(gear))) +
geom_point(size = 5) +
scale_shape_manual(values = c(10, 8)) +
scale_color_manual(values = c("orange", "blue"), guide = guide_legend(override.aes = list(shape = 21))) +
theme_bw()
ggplot(data = data_cars, mapping = aes(x = mpg, y = wt, shape = factor(am), fill = factor(gear))) +
geom_point(size = 5) +
scale_shape_manual(values = c(10, 8)) +
scale_color_manual(values = c("orange", "blue", "black"), guide = guide_legend(override.aes = list(shape = 21))) +
theme_bw()
ggplot(data = data_cars, mapping = aes(x = mpg, y = wt, shape = factor(am), fill = factor(gear))) +
geom_point(size = 5) +
scale_shape_manual(values = c(10, 8)) +
scale_fill_manual(values = c("orange", "blue", "black"), guide = guide_legend(override.aes = list(shape = 21))) +
theme_bw()
ggplot(data = data_cars, mapping = aes(x = mpg, y = wt, shape = factor(am), fill = factor(gear))) +
geom_point(size = 5) +
scale_shape_manual(values = c(10, 8)) +
scale_fill_manual(values = c("orange", "blue", "yellow"), guide = guide_legend(override.aes = list(shape = 21))) +
theme_bw()
ggplot(data = data_cars, mapping = aes(x = mpg, y = wt, shape = factor(am), fill = factor(gear))) +
geom_point(size = 5) +
scale_shape_manual(values = c(21, 22)) +
scale_fill_manual(values = c("orange", "blue", "yellow"), guide = guide_legend(override.aes = list(shape = 21))) +
theme_bw()
fill
ggplot(data = data_cars, mapping = aes(x = mpg, y = wt, shape = factor(am), fill = factor(gear))) +
geom_point(size = 5) +
scale_shape_manual(values = c(21, 22)) +
scale_fill_manual(values = c("orange", "blue", "yellow"), guide = guide_legend(override.aes = list(shape = 21))) +
theme_bw()
View(data_cars)
ggplot(data = data_cars, mapping = aes(x = mpg, y = wt, shape = factor(am), color = factor(gear))) +
geom_point(size = 5) +
scale_shape_manual(values = c(21, 22)) +
scale_color_manual(values = c("orange", "blue", "yellow"))
ggplot(data = data_cars, mapping = aes(x = mpg, y = wt, shape = factor(am), color = factor(gear))) +
geom_point(size = 5) +
scale_shape_manual(values = c(21, 22)) +
scale_color_manual(values = c("orange", "blue", "yellow"))
ggplot(data = data_cars, mapping = aes(x = mpg, y = wt, shape = factor(am), fill = factor(gear))) +
geom_point(size = 5) +
scale_shape_manual(values = c(21, 22)) +
scale_fill_manual(values = c("orange", "blue", "yellow")) +
theme_bw()
ggplot(data = data_cars, mapping = aes(x = mpg, y = wt, shape = factor(am), fill = factor(gear))) +
geom_point(size = 5) +
scale_shape_manual(values = c(21, 22)) +
scale_fill_manual(values = c("orange", "blue", "yellow"))
ggplot(data = data_cars, mapping = aes(x = mpg, y = wt, shape = factor(am), color = factor(am))) +
geom_point(size = 5) +
scale_shape_manual(values = c(10, 8))
ggplot(data = data_cars, mapping = aes(x = mpg, y = wt, shape = factor(am), color = factor(gear))) +
geom_point(size = 5) +
scale_shape_manual(values = c(21, 22)) +
scale_color_manual(values = c("orange", "blue", "yellow"))
ggplot(data = data_cars, mapping = aes(x = mpg, y = wt, shape = factor(am), fill = factor(gear))) +
geom_point(size = 5) +
scale_shape_manual(values = c(21, 22)) +
scale_fill_manual(values = c("orange", "blue", "yellow"), guide = guide_legend(override.aes = list(shape = 21)))
library(ggplot2)
data(package = "ggplot2")
myData= mpg
View(myData)
plot1 = ggplot(data = myData, mapping = aes(x = displ, y = hmy, color = drv)) +
geom_point()
plot1
plot1 = ggplot(data = myData, mapping = aes(x = displ, y = hwy, color = drv)) +
geom_point()
plot1
plot1 + facet_wrap(~drv, ncol = 3)
plot1 + facet_wrap(~drv+class, ncol = 3)
plot1 + facet_grid(class~drv)
plot1 + facet_grid(class~drv, scales = "free_x")
plot1 + facet_grid(class~drv, scales = "free_y")
